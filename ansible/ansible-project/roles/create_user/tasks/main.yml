---
- name: Create new user
  ansible.builtin.user:
    name: "{{ user_name }}"
    shell: "{{ user_shell }}"
    create_home: yes

- name: Add user to sudo group (Debian/Ubuntu)
  ansible.builtin.user:
    name: "{{ user_name }}"
    groups: sudo
    append: yes
  when: ansible_os_family == 'Debian'

- name: Add user to wheel group (CentOS/RedHat)
  ansible.builtin.user:
    name: "{{ user_name }}"
    groups: wheel
    append: yes
  when: ansible_os_family in ['RedHat', 'Sangoma']

- name: Configure passwordless sudo for user
  copy:
    dest: "/etc/sudoers.d/{{ user_name }}"
    content: "{{ user_name }} ALL=(ALL) NOPASSWD: ALL"
    owner: root
    group: root
    mode: '0440'
  when: sudo_nopasswd | default(false)


- name: Set authorized_keys for new user
  ansible.builtin.authorized_key:
    user: "{{ user_name }}"
    state: present
    key: "{{ lookup('file', role_path + '/files/' + user_public_key) }}"

- block:
    - name: Get current AllowUsers line from sshd_config
      shell: grep '^AllowUsers' /etc/ssh/sshd_config || true
      register: allowusers_current
      changed_when: false

    - name: Set AllowUsers variable
      set_fact:
        allowusers_line: >-
          AllowUsers {{
            (
              (
                allowusers_current.stdout.split(':')[-1].split()[1:]
                if allowusers_current.stdout else []
              )
              + [ user_name ]
            ) | unique | join(' ')
          }}

    - name: Ensure user is in AllowUsers in sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^AllowUsers'
        line: "{{ allowusers_line }}"
        create: yes
        state: present
        insertafter: EOF
      notify: Restart sshd

